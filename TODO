--- Current showstoppers (pre-share with Evan/LRD)

SSH tunnelling for provision - ideally including a local HTTP proxy of all servers in need

Chef: multiple cookbooks (e.g. LRD base + Client deploy)

Bless(/bake) instances

Logging provisioning stuff - especially the chef output.  rake provision outputs nothing until done.  Logging or output would be handy.

Stream output of commands in rake -v mode.

--- 1= known showstoppers fixed.  Other bugs:

Check fixed: Bug: /etc/init.d/logical-construct is generated once and never rebuilt, so the LC_DP variable isn't set per rake setup.

Unpack needs (at least the option) to clobber target directory - otherwise
"bad" files that are just deleted poison the directory.

Pack needs (something) to handle deleted files in the source directory - so
file-style + archive index - we need to recreate an archive if a file has been
deleted

The ephemeral mounts task mounts and remounts (... and remounts) directories in
the /mnt directory.  Should be able to re-run chef without duplicating mounts

--- Features

Arrange deployment vs. application code... related at all?
  related to:
"Compile" (rails) app into deployable - assets:precompile on deployment servers is silly.

AWS resolutions:
  from user_data (or other instance metadata)
  from S3?

Resolution chains - "look at instance metadata, then S3, then start Sinatra"

Resolution manifests - all Satisfiables "needed" unless they match the manifest (if the manifest task is present...)

"Promote" VBox instances to AWS (generally: convert instances between platforms)

Something to handle private keys - an -i option to the SSH commands, basically,
but it needs to be per-project, and not in the Rakefile.  There's the
user-configuration, which'll make sense for a lot of things
(Time being: Judson is using Host *.compute-1.amazonaws.com in .ssh/config)

GC provision WebConfigure: output re: uploads

Integrate with ... something for instance management
  Should completely replace current workflow of: start Instance, record IP, later:
  for s in $(cat <some ip files>); do <management>; done

--- Nice to have (usually easy)

Decompose into 2 tasklibs the ChefConfig tasklib - something like UnpackTarballs and ConfigureChef

Bug: why do we emit several "tar" commands for the cookbook directory?

Descriptions: need for setup, provision tasks - not sub tasks of setup

Move /var/logical-construct to /var/run/lc or /opt/bin/lc or ...

provision namespace needs a "list roles" task

LC should echo local IP (at least) on failure

LC init task should start a "status/report" server on complete - maybe just single page of "success/fail" and chef log

--- Gentoo related

Consider S3 as a PORTAGE_BINHOST - should be possible to do installs on a machine, then mirror /usr/portage/packages to S3, especially if the metadata in S3 is such that we don't re-upload packages we pulled down to do the build.

Binhost needs to be related to arch, CHOST, CFLAGS, processor USE flags (MXX, SSE, ???)

How to deal with portage?  Open questions:
  eix-sync
  & syncing /usr/portage
  & updating portage
  Maybe: "how long since last sync? and if more than (days) sync, update portage"
  man emerge: "emerge-webrsync pulls one tbz which is faster for first-time"
  How long to last: emerge --info includes "Timestamp of tree"

--- Bluesky wishlist

Hypermedia client in Ruby for provisioning
